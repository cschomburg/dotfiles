# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# TMUX autostart new session or connect to previous
if type tmux &>/dev/null; then
    if [ -z "$TMUX" ]; then
        if tmux -q has-session -t main; then
            exec tmux attach-session -t main
        else
            exec tmux new-session -s main
        fi
    fi
fi

# prompt
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
RESET=$(tput sgr0)

PS1="\[\e[31m\]"
if [ "$USER" != "xconstruct" ]; then
    PS1="$PS1\u"
fi
if [ -n "$SSH_CONNECTION" ] && [ "$HOSTNAME" != "razorcoil" ]; then
    PS1="$PS1@\h"
fi
PS1="\n$PS1 \D{%T} ${RED}\w\$(__git_ps1) ${RESET}"
PROMPT_DIRTRIM=2

# gigantic history
HISTTIMEFORMAT="%y-%m-%d %T "
HISTSIZE=-1
HISTFILESIZE=-1
HISTCONTROL=ignoreboth:erasedups
shopt -s histappend

# find dotfiles dir
BASHRC_PATH=$(readlink -f ${BASH_SOURCE[0]})
BASHDIR_PATH=$(dirname $BASHRC_PATH)
DOTFILES=$(dirname $BASHDIR_PATH)

# setup Go language environment and path
test -d "$HOME/code/go" &&
    export GOPATH="$HOME/code/go" &&
    PATH="$HOME/code/go/bin:$PATH"

test -d "$HOME/.npm-packages/bin" &&
    PATH="$HOME/.npm-packages/bin:$PATH"

PATH="$DOTFILES/bin:$PATH"
test -d "$DOTFILES/private/bin" &&
    PATH="$DOTFILES/private/bin:$PATH"
test -d "$HOME/bin" &&
    PATH="$HOME/bin:$PATH"

test -d "$HOME/.npm-packages" &&
    NPM_PACKAGES="${HOME}/.npm-packages" &&
    PATH="$NPM_PACKAGES/bin:$PATH"


bind "set show-all-if-ambiguous on"

eval "$(dircolors $DOTFILES/dircolors)";
alias ls='ls --color '
alias cp='cp -vi'
alias mv='mv -v'
alias xclipb='xclip -selection clipboard'
alias x="xdg-open"

alias sshfs-sane='sshfs -o reconnect'
alias latexmk="latexmk -pdf -pvc"

if type rg &> /dev/null; then
    alias ag='rg -S'
elif ! type ag &> /dev/null; then
    alias ag='grep -R'
fi

if type htop &> /dev/null; then
    alias top="htop"
fi

export EDITOR=vim
export VISUAL=vim
if type nvim &> /dev/null; then
    export MANPAGER="nvim -c 'set ft=man' -"
fi

# other extensions

[ -f ~/.nvim/bundle/gruvbox/gruvbox_256palette.sh ] &&
    . ~/.nvim/bundle/gruvbox/gruvbox_256palette.sh

[ -f ~/.bashrc_local ] && . ~/.bashrc_local

# starship prompt
if type starship &> /dev/null; then
    eval "$(starship init bash)"
fi

[ -f $DOTFILES/z.sh ] && source $DOTFILES/z.sh

[ -f ~/.fzf/shell/completion.bash ] && source ~/.fzf/shell/completion.bash
[ -f ~/.fzf/shell/key-bindings.bash ] && source ~/.fzf/shell/key-bindings.bash

# direnv
if type direnv &> /dev/null; then
    eval "$(direnv hook bash)"
fi

export LEDGER_FILE=~/sync/essential/ledger/main.ledger

# vim ripgrep
vg() {
  local file
  local line

  read -r file line <<<"$(rg -n $@ | fzf -0 -1 | awk -F: '{print $1, $2}')"

  if [[ -n $file ]]
  then
     vim $file +$line
  fi
}

# z with fzf support
unalias z 2> /dev/null
z() {
  [ $# -gt 0 ] && _z "$*" && return
  cd "$(_z -l 2>&1 | fzf --height 40% --nth 2.. --reverse --inline-info +s --tac --query "${*##-* }" | sed 's/^[0-9,.]* *//')"
}
