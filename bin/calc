#!/usr/bin/env python3

from math import *

import sys
import builtins
import random
import hashlib
import binascii
from random import randrange, randint, choice, shuffle, random as rand, uniform
from datetime import datetime, date, time, timedelta

def md5(x):
    return hashlib.md5(x.encode("utf-8")).hexdigest()
def sha1(x):
    return hashlib.sha1(x.encode("utf-8")).hexdigest()
def sha256(x):
    return hashlib.sha256(x.encode("utf-8")).hexdigest()
def sha512(x):
    return hashlib.sha512(x.encode("utf-8")).hexdigest()

def hex(x):
    if isinstance(x, bytes):
        return "0x" + binascii.hexlify(x).decode("utf-8")
    elif isinstance(x, str):
        return "0x" + binascii.hexlify(x.encode("utf-8")).decode("utf-8")
    else:
        return builtins.hex(x)

def bin(x):
    return bin(int(hex(x), 16))

def unhex(x):
    if isinstance(x, str):
        x = x.encode("utf-8")
        if x.startswith(b"0x"):
            x = x[2:]
            return binascii.unhexlify(x)

# average
def avg(*args):
    try:
        return sum(args[0]) / len(args[0])
    except TypeError:
        return sum(args) / len(args)

# strings
def wcount(s):
    return len(s.split())
def ccount(s):
    return len(s)

# date & time
def epoch(x):
    ts = int(x)
    if ts > 1e11:
        ts = ts / 1000
    return datetime.utcfromtimestamp(ts)

def main():
    fn = sys.argv[1]
    args = sys.argv[2:]
    f = globals()[fn]
    print(f(*args))

if __name__== "__main__":
  main()
