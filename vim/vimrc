set nocompatible
set showmatch					"  Show matching brackets

set encoding=utf-8				" Unicode support
"set t_Co=256					" Enable 256-color support
set novisualbell				" Don't blink

" Indent
set autoindent					" Auto indenting
set smartindent					" Smart indenting
set backspace=indent,eol,start	" Make  backspace work as usual
set tabstop=4					" an indentation every 4 columns
set shiftwidth=4				" Use indents of 4 spaces

" Status line
set showcmd						" Show (partial) command in status line
set showmode					" Show mode in status line
set cmdheight=1					" Set height of command
set laststatus=2				" Always show status line

" Search
set nohlsearch					" Do not highlight the string we searched
set incsearch					" Incremental search: Highlight the searched string while typing
set ignorecase					" Case-insensitive search
set smartcase					" Upper-case sensitive search
set wrapscan					" searches wrap back to the top of file

" Other stuff
set number
set relativenumber
set mat=5						" How many tenth of a second to blink matching brackets for
set foldmethod=marker			" Auto-folding in files with markers
set fileformats=unix,dos,mac	" Support in this order
set ruler
set nowrap						" Don't wrap long lines to fit terminal width
set nobackup					" Disable backup
set swapfile
set updatecount=2000
set directory=$HOME/.vim/tmp
set ttyfast						" tell vim we're using a fast terminal for redraws
set autoread					" Reload file if vim detects it changed elsewhere
set history=23					" Lines of command history
set undolevels=24				" Set undo level
set title						" Set window title with the vim files
set wildmode=list:longest		" Bash-like tab completion list
set formatoptions-=o			" don't continue comments when pushing o/O
set scrolljump=5				" lines to scroll when cursor leaves screen
set scrolloff=3					" minimum lines to keep above and below cursor
set gdefault					" the /g flag on :s substitutions by default
set scrolljump=5				" lines to scroll when cursor leaves screen
set scrolloff=3					" minimum lines to keep above and below cursor
set gdefault					" the /g flag on :s substitutions by default
set cursorline                  " Highlight current line
set colorcolumn=80,120			" Mark 80px column
set conceallevel=2				" Conceal

" GUI options
set guioptions-=m				" Remove menu bar
set guioptions-=T				" Remove toolbar
set guioptions-=r				" Remove right-hand scroll bar

" Mintty mode-dependent cursor
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"

" Keep selection after indent
vmap > >gv
vmap < <gv

" Yank from the cursor to the end of the line, to be consistent with C and D
nnoremap Y y$

" X clipboard cut/paste
" map <C-V> "+gP
" cmap <C-V> <C-R>+
vnoremap <C-C> "+y

" For when you forget to sudo.. Really write the file
cmap w!! w !sudo tee % >/dev/null

" necessary on some Linux distros to properly load bundles
filetype off

set rtp+=~/.vim/bundle/neobundle.vim/
silent! call neobundle#rc(expand('~/.vim/bundle/'))
if exists('*neobundle#rc')
	NeoBundleFetch 'Shougo/neobundle.vim'
	NeoBundle 'sheerun/vim-polyglot'
	NeoBundle 'Shougo/unite.vim'
	NeoBundle 'bling/vim-airline'
	NeoBundle 'tpope/vim-surround'
	NeoBundle 'scrooloose/syntastic'
	NeoBundle 'chriskempson/base16-vim'

	let base16colorspace=256
	colorscheme base16-default
	set background=dark

	" Unite
	nnoremap <space>s :Unite -quick-match buffer<cr>

	" Airline
	let g:airline#extensions#tabline#buffer_min_count = 2
	let g:airline#extensions#tabline#enabled = 1
	let g:airline_theme='serene'
	let g:airline_mode_map = {
				\ '__' : '-',
				\ 'n'  : 'N',
				\ 'i'  : 'I',
				\ 'R'  : 'R',
				\ 'c'  : 'C',
				\ 'v'  : 'V',
				\ 'V'  : 'V',
				\ '' : 'V',
				\ 's'  : 'S',
				\ 'S'  : 'S',
				\ '' : 'S',
				\ }

	" Syntastic
	let g:syntastic_auto_jump=1
	let g:syntastic_auto_loc_list=1
	let g:syntastic_mode_map = { 'mode': 'active',
				\ 'active_filetypes': [],
				\ 'passive_filetypes': ['cpp'] }
else
	" Credits to http://jasonwryan.com/
	set statusline=\ \%t%m%r%h%w    " file, modified, readonly, helpfile
	set statusline+=\ ::\ %y        " filetype
	set statusline+=\ [%{strlen(&fenc)?&fenc:'none'}] "file type
	set statusline+=\ [%{&ff}]      " file encoding
	set statusline+=%=              " left/right separator
	set statusline+=\ [%p%%:\       " scroll percent
	set statusline+=%l/%L\ %c]\     " line/lines, column
endif


" load ftplugins and indent files
filetype plugin on
filetype indent on

" turn on syntax highlighting
syntax on

if exists('*neobundle#rc')
	NeoBundleCheck
end
